/*
 * Copyright (c) 2020. AluSoft Technologies Ltd.
 * Website: https://alusofttechnologies.com
 * Email: directors@alusofttechnologies.com
 * The entire source code of this project is an intellectual property of AluSoft Technologies Ltd
 * and their respective contributors as indicated in header of their respective files.
 * All libraries used in this project are intellectual properties of their respective authors
 * and their licence included where deemed fit.
 * All right reserved. No party has any right whatsoever to duplicate the content therein digitally
 * or otherwise without express written permission from the company.
 */

//Toast
var Toasts = function ($) {
    /**
     * Constants
     * ====================================================
     */
    var NAME = 'Toasts';
    var DATA_KEY = 'lte.toasts';
    var EVENT_KEY = "." + DATA_KEY;
    var JQUERY_NO_CONFLICT = $.fn[NAME];
    var Event = {
        INIT: "init" + EVENT_KEY,
        CREATED: "created" + EVENT_KEY,
        REMOVED: "removed" + EVENT_KEY
    };
    var Selector = {
        BODY: 'toast-body',
        CONTAINER_TOP_RIGHT: '#toastsContainerTopRight',
        CONTAINER_TOP_LEFT: '#toastsContainerTopLeft',
        CONTAINER_BOTTOM_RIGHT: '#toastsContainerBottomRight',
        CONTAINER_BOTTOM_LEFT: '#toastsContainerBottomLeft'
    };
    var ClassName = {
        TOP_RIGHT: 'toasts-top-right',
        TOP_LEFT: 'toasts-top-left',
        BOTTOM_RIGHT: 'toasts-bottom-right',
        BOTTOM_LEFT: 'toasts-bottom-left',
        FADE: 'fade'
    };
    var Position = {
        TOP_RIGHT: 'topRight',
        TOP_LEFT: 'topLeft',
        BOTTOM_RIGHT: 'bottomRight',
        BOTTOM_LEFT: 'bottomLeft'
    };
    var Default = {
        position: Position.TOP_RIGHT,
        fixed: true,
        autohide: false,
        autoremove: true,
        delay: 1000,
        fade: true,
        icon: null,
        image: null,
        imageAlt: null,
        imageHeight: '25px',
        title: null,
        subtitle: null,
        close: true,
        body: null,
        class: null
    };
    /**
     * Class Definition
     * ====================================================
     */

    var Toasts =
        /*#__PURE__*/
        function () {
            function Toasts(element, config) {
                this._config = config;

                this._prepareContainer();

                var initEvent = $.Event(Event.INIT);
                $('body').trigger(initEvent);
            } // Public


            var _proto = Toasts.prototype;

            _proto.create = function create() {
                var toast = $('<div class="toast" role="alert" aria-live="assertive" aria-atomic="true"/>');
                toast.data('autohide', this._config.autohide);
                toast.data('animation', this._config.fade);

                if (this._config.class) {
                    toast.addClass(this._config.class);
                }

                if (this._config.delay && this._config.delay !== 500) {
                    toast.data('delay', this._config.delay);
                }

                var toast_header = $('<div class="toast-header">');

                if (this._config.image != null) {
                    var toast_image = $('<img />').addClass('rounded mr-2').attr('src', this._config.image).attr('alt', this._config.imageAlt);

                    if (this._config.imageHeight != null) {
                        toast_image.height(this._config.imageHeight).width('auto');
                    }

                    toast_header.append(toast_image);
                }

                if (this._config.icon != null) {
                    toast_header.append($('<i />').addClass('mr-2').addClass(this._config.icon));
                }

                if (this._config.title != null) {
                    toast_header.append($('<strong />').addClass('mr-auto').html(this._config.title));
                }

                if (this._config.subtitle != null) {
                    toast_header.append($('<small />').html(this._config.subtitle));
                }

                if (this._config.close === true) {
                    var toast_close = $('<button data-dismiss="toast" />').attr('type', 'button').addClass('ml-2 mb-1 close').attr('aria-label', 'Close').append('<span aria-hidden="true">&times;</span>');

                    if (this._config.title == null) {
                        toast_close.toggleClass('ml-2 ml-auto');
                    }

                    toast_header.append(toast_close);
                }

                toast.append(toast_header);

                if (this._config.body != null) {
                    toast.append($('<div class="toast-body" />').html(this._config.body));
                }

                $(this._getContainerId()).prepend(toast);
                var createdEvent = $.Event(Event.CREATED);
                $('body').trigger(createdEvent);
                toast.toast('show');

                if (this._config.autoremove) {
                    toast.on('hidden.bs.toast', function () {
                        $(this).delay(200).remove();
                        var removedEvent = $.Event(Event.REMOVED);
                        $('body').trigger(removedEvent);
                    });
                }
            } // Static
            ;

            _proto._getContainerId = function _getContainerId() {
                if (this._config.position === Position.TOP_RIGHT) {
                    return Selector.CONTAINER_TOP_RIGHT;
                } else if (this._config.position === Position.TOP_LEFT) {
                    return Selector.CONTAINER_TOP_LEFT;
                } else if (this._config.position === Position.BOTTOM_RIGHT) {
                    return Selector.CONTAINER_BOTTOM_RIGHT;
                } else if (this._config.position === Position.BOTTOM_LEFT) {
                    return Selector.CONTAINER_BOTTOM_LEFT;
                }
            };

            _proto._prepareContainer = function _prepareContainer() {
                if ($(this._getContainerId()).length === 0) {
                    var container = $('<div />').attr('id', this._getContainerId().replace('#', ''));

                    if (this._config.position === Position.TOP_RIGHT) {
                        container.addClass(ClassName.TOP_RIGHT);
                    } else if (this._config.position === Position.TOP_LEFT) {
                        container.addClass(ClassName.TOP_LEFT);
                    } else if (this._config.position === Position.BOTTOM_RIGHT) {
                        container.addClass(ClassName.BOTTOM_RIGHT);
                    } else if (this._config.position === Position.BOTTOM_LEFT) {
                        container.addClass(ClassName.BOTTOM_LEFT);
                    }

                    $('body').append(container);
                }

                if (this._config.fixed) {
                    $(this._getContainerId()).addClass('fixed');
                } else {
                    $(this._getContainerId()).removeClass('fixed');
                }
            } // Static
            ;

            Toasts._jQueryInterface = function _jQueryInterface(option, config) {
                return this.each(function () {
                    var _config = $.extend({}, Default, config);

                    var toast = new Toasts($(this), _config);

                    if (option === 'create') {
                        toast[option]();
                    }
                });
            };

            return Toasts;
        }();
    /**
     * jQuery API
     * ====================================================
     */


    $.fn[NAME] = Toasts._jQueryInterface;
    $.fn[NAME].Constructor = Toasts;

    $.fn[NAME].noConflict = function () {
        $.fn[NAME] = JQUERY_NO_CONFLICT;
        return Toasts._jQueryInterface;
    };

    return Toasts;
}(jQuery);

var flashCount = 1;

function flash(type, message, time, position) {
    type = type === "danger" ? "error" : type;
    const Toast = Swal.mixin({
        toast: true,
        position: position || 'top-right',
        showConfirmButton: false,
        timer: time || 5000
    });
    Toast.fire({
        type: type,
        title: "<div class='text-" + (type === "error" ? "danger" : type) + " py-3'> &nbsp; &nbsp;&nbsp;&nbsp;" + message + "</div>"
    });
}

function flashDelay(type, message, time, position) {
    if (flashCount > 1) {
        flashCount = 1;
        setTimeout(function () {
            flash(type, message, time, position);
        }, time || 3000);
    } else {
        flash(type, message, time, position);
        flashCount++;
    }
}

// initialize scrollspy
$('body').scrollspy({

    target: '.dotted-scrollspy'
});

// initialize lightbox
$(function () {
    $("#mdb-lightbox-ui").load("../mdb-addons/mdb-lightbox-ui.html");
});

$('.navbar-collapse a').click(function () {

    $(".navbar-collapse").collapse('hide');
});

/* WOW.js init */
new WOW().init();

var screenInt = 1;
window.setInterval(
    function () {

        showProduct('screen' + screenInt);
        if (screenInt < 6) {
            screenInt++;
        } else {
            screenInt = 1;
        }
    }, 20000);

function showProduct(id) {
    $(".project-grid ").hide();
    $(`#` + id).show();
}

$(function () {
    if (location.hash) {
        var hash = location.hash;
        var pieces = hash.substr(1).split('/');
        if (pieces.length > 1) {
            location.hash = '#' + pieces[0];
            switch (pieces[1].toLowerCase()) {
                case 'edulearn':
                    showProduct('screen5');
                    break;
                default:
                    break;
            }
        }
    }
    $('.customer-logos').slick({
        slidesToShow: 6,
        slidesToScroll: 1,
        autoplay: true,
        autoplaySpeed: 1500,
        arrows: false,
        dots: false,
        pauseOnHover: false,
        responsive: [{
            breakpoint: 768,
            settings: {
                slidesToShow: 4
            }
        }, {
            breakpoint: 520,
            settings: {
                slidesToShow: 3
            }
        }]
    });
    $('#contact-form').submit(function (e) {
        $('#contact-form').append(`<div class="spinner" id="spinner"><div class="spinner-border text-primary"></div></div>`);
        $('#contact-form button').attr('disabled', 'disabled');
        // we stoped it
        e.preventDefault();
        var name = $('#contact-name').val();
        var email = $('#contact-email').val();
        var subject = $("#contact-subject").val();
        var message = $("#contact-message").val();
        // needs for recaptacha ready
        grecaptcha.ready(function () {
            // do request for recaptcha token
            // response is promise with passed token
            grecaptcha.execute('6LdBRtUZAAAAAF_SL82IlopQ5JCT0eM7kURmIUpp', {action: 'controllers/contact'}).then(function (token) {
                // add token to form
                $('#contact-form').prepend('<input type="hidden" name="g-recaptcha-response" value="' + token + '">');
                $.post("controllers/contact", {
                    name: name,
                    email: email,
                    message: message,
                    subject: subject,
                    token: token
                }, function (result) {
                    console.log(result);
                    if (parseInt(result) === 1) {
                        $('#contact-form').trigger("reset");
                        flash('success', 'Thanks for contacting us.');
                        $('#spinner').remove();
                        $('#contact-form button').prop("disabled", false);
                    } else {
                        flash('error', 'Sorry. Your message cannot be sent.');
                        $('#spinner').remove();
                        $('#contact-form button').prop("disabled", false);
                    }
                });
            });
        });
    });
    $('a[href^=http]').attr('target', '_blank');
});
